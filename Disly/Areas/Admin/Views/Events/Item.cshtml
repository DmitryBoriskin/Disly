@model EventsViewModel

@if (Model.UserResolution.Write)
{
    <div class="content">
        <h1>@ViewBag.Title</h1>
        <div class="row">
            <div class="col-lg-7">@Html.TextBoxFor(m => m.Item.Title, new { required = "required", type = "text", maxlength = "512", title = "Заголовок" })</div>
            <div class="col-lg-5">@Html.TextBoxFor(m => m.Item.Alias, new { type = "text", title = "Название страницы", placeholder = "event-name", MaxLength = "512", data_help = "описание" })</div>
        </div>
        <div class="row">
            <div class="col-lg-12">
                @Html.TextBoxFor(m => m.Item.PreviewImage.Url, new { type = "file", title = "Картинка для предпросмотра", data_name = "", data_size = "", data_url = "", data_help = "размер фотографии должен быть не менне 400 точек по ширине и пропорции картинки - 4х3" })
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12">
                @Html.TextAreaFor(m => m.Item.Text, new { type = "editor", title = "Текст", height = "300" })
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12">
                @Html.TextBoxFor(m => m.Item.Place, new { type = "text", title = "Место проведения", placeholder = "", MaxLength = "4096" })
                @Html.TextBoxFor(m => m.Item.EventMaker, new { type = "text", title = "Организатор", placeholder = "", MaxLength = "1024" })
            </div>
        </div>
        <div class="row">
            <div class="col-lg-5">
                @Html.TextBoxFor(m => m.Item.UrlName, new { type = "text", title = "Название первоисточника" })
            </div>
            <div class="col-lg-7">
                @Html.TextBoxFor(m => m.Item.Url, new { type = "text", title = "Ссылка на первоисточник", placeholder = "http://", MaxLength = "128" })
            </div>
        </div>
    </div>

    <div class="dop_info-block">
        <div class="dop-caption">Настройки</div>
        


        @*@Html.DropDownListFor(m => m.Item.Type, new SelectList(section[0].Items, "Alias", "Title", 0), new { @class = "uc_input", @title = section[0].Title, @required = "" })
            @Html.DropDownListFor(m => m.Item.Category, new SelectList(section[1].Items, "Alias", "Title", 0), new { @class = "uc_input", @title = section[1].Title, @required = "" })*@

        @Html.TextBoxFor(m => m.Item.DateBegin, new { required = "required", data_type = "datetime", title = "Дата начала события" })
        @Html.TextBoxFor(m => m.Item.DateEnd, new { data_type = "datetime", title = "Дата окончания события"})
        @Html.CheckBoxFor(m => m.Item.Annually, new { type = "checkbox", title = "Ежегодное событие", data_toggle = "toggle", data_on = "не ежегодное", data_onstyle = "danger", data_off = "ежегодное", data_offstyle = "success", data_width = "248" })
        <div class="group-block open" title="Мета теги">
            @Html.TextAreaFor(m => m.Item.KeyW, new { type = "text", title = "Ключевые слова", data_help = "Данный тег используется при создании краткого описания страницы, используется поисковыми системами для индексации, а также при создании аннотации в выдаче по запросу. При отсутствии тега поисковые системы выдают в аннотации первую строку документа или отрывок, содержащий ключевые слова." })
            @Html.TextAreaFor(m => m.Item.Desc, new { type = "text", title = "Краткое описание", data_help = "Данный метатег поисковые системы используют для того, чтобы определить релевантность ссылки. При формировании данного тега необходимо использовать только те слова, которые содержатся в самом документе. Использование тех слов, которых нет на странице, не рекомендуется. Рекомендованное количество слов в данном теге — не более десяти." })
        </div>
        @Html.CheckBoxFor(m => m.Item.Disabled, new { type = "checkbox", title = "Запретить просмотр", data_toggle = "toggle", data_on = "запретить просмотр", data_onstyle = "danger", data_off = "показывать на сайте", data_offstyle = "success", data_width = "248" })

        @if (Model.Item.SiteId != null)
        {
            <br />
            <div class="alert alert-info">
                <strong>Сайт данного события создан!</strong><br>
                <a href="/admin/sites/item/@Model.Item.SiteId" target="_blank">Редактировать сайт</a>
            </div>
        }
        else
        {
            <a class="button icon-create" href="/Admin/Sites/Master/@Guid.NewGuid()/?type=event&contentid=@Model.Item.Id" target="_blank">Создать сайт события</a>
        }

        @Html.ActionLink("Прикрепленные документы", "log", "services", new { @id = Model.Item.Id }, new { @id = "LogLists", @class = "button pop-up_frame icon-archive", @data_class = "LogList", @title = "Прикрепленные документы" })
        @Html.ActionLink("Сайты для размещения", "log", "services", new { @id = Model.Item.Id }, new { @id = "LogLists", @class = "button pop-up_frame icon-archive", @data_class = "LogList", @title = "Сайты для размещения" })
        @if (Model.Item != null)
                {
            @Html.ActionLink("Журнал изменений", "log", "services", new { @id = Model.Item.Id }, new { @id = "LogLists", @class = "button pop-up_frame icon-archive", @data_class = "LogList", @title = "Журнал изменений" })
        }
    </div>

}
else
{
    <div class="content"><p>У вас недостаточно прав.</p></div>
}

<div class="buttons">
    @if ((Model.Item != null && Model.UserResolution.Change) || (Model.Item == null && Model.UserResolution.Write))
    {
        <button type="submit" name="action" value="save-btn" data-primary="true" class="button icon-create">Сохранить</button>
    }
    @if (Model.Item != null && Model.UserResolution.Delete)
    {
        <button type="submit" name="action" value="delete-btn" class="button icon-delete">Удалить</button>
    }
    <button type="submit" name="action" value="cancel-btn" class="button icon-cancel">Закрыть</button>
</div>