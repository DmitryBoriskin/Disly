@model VacanciesViewModel

@if (Model.UserResolution.Write)
{
    <div class="content">
        <h1>@ViewBag.Title</h1>
        <div class="row">
            <div class="col-lg-6">
                @Html.TextBoxFor(m => m.Item.Profession, new { required = "required", type = "text", title = "Профессия", maxlength = "100" })
            </div>
            <div class="col-lg-6">
                @Html.TextBoxFor(m => m.Item.Post, new { type = "text", title = "Должность", maxlength = "512" })
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6">
                @Html.TextBoxFor(m => m.Item.Salary, new { type = "text", title = "Зарплата", placeholder = "", maxlength = "256" })
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12">@Html.TextAreaFor(m => m.Item.Desc, new { type = "editor", title = "Должностные обязанности", height = "300", maxlength = "2048", data_dir= ViewBag.DataPath })</div>
        </div>
        <div class="row">
            <div class="col-lg-12">
                @Html.TextAreaFor(m => m.Item.Experience, new { type = "editor", title = "Требования", height = "300", maxlength = "2048", data_dir = ViewBag.DataPath })
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12">

                @Html.TextAreaFor(m => m.Item.Сonditions, new { type = "editor", title = "Условия", placeholder = "", height = "300", maxlength = "4096", data_dir = ViewBag.DataPath })
            </div>
        </div>
    </div>

    <div class="dop_info-block">
        <div class="dop-caption">Настройки</div>
        @Html.TextBoxFor(m => m.Item.Date, new { type = "text", required = "required", data_type = "datetime", title = "Дата" })
        @*@Html.DropDownListFor(m => m.Item.Type, new SelectList(section[0].Items, "Alias", "Title", 0), new { @class = "uc_input", @title = section[0].Title, @required = "" })
            @Html.DropDownListFor(m => m.Item.Category, new SelectList(section[1].Items, "Alias", "Title", 0), new { @class = "uc_input", @title = section[1].Title, @required = "" })*@

        @*@Html.CheckBoxFor(m => m.Item.IsNew, new { type = "checkbox", title = "Не прочитано", data_toggle = "toggle", data_on = "не прочитано", data_onstyle = "danger", data_off = "прочитано", data_offstyle = "success", data_width = "248" })*@
        @Html.CheckBoxFor(m => m.Item.Temporarily, new { type = "checkbox", title = "Замещение", data_toggle = "toggle", data_on = "замещение", data_onstyle = "danger", data_off = "не замещение", data_offstyle = "success", data_width = "248" })
        @Html.CheckBoxFor(m => m.Item.Disabled, new { type = "checkbox", title = "Запретить просмотр", data_toggle = "toggle", data_on = "запретить просмотр", data_onstyle = "danger", data_off = "показывать на сайте", data_offstyle = "success", data_width = "248" })
        @if (Model.Item != null)
                {
            @Html.ActionLink("Журнал изменений", "log", "services", new { @id = Model.Item.Id }, new { @id = "LogLists", @class = "button pop-up_frame icon-archive", @data_class = "LogList", @title = "Журнал изменений" })
        }
    </div>

}
else
{
    <div class="content"><p>У вас недостаточно прав.</p></div>
}

<div class="buttons">
    @if ((Model.Item != null && Model.UserResolution.Change) || (Model.Item == null && Model.UserResolution.Write))
    {
        <button type="submit" name="action" value="save-btn" data-primary="true" class="button icon-create">Сохранить</button>
    }
    @if (Model.Item != null && Model.UserResolution.Delete)
    {
        if (!string.IsNullOrEmpty(Model.Item.Post) || !string.IsNullOrEmpty(Model.Item.Profession))
        {
        <button type="submit" name="action" value="delete-btn" data-action="delete" class="button icon-delete">Удалить</button>
        }
    }
    <button type="submit" name="action" value="cancel-btn" data-action="cancel" class="button icon-cancel">Закрыть</button>
</div>