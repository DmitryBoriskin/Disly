@model GSViewModel

@{
    var newId = Guid.NewGuid();
}

@if (Model.UserResolution.Write)
{
    <div class="content">
        <h1>@ViewBag.Title</h1>
        @Html.TextBoxFor(m => m.Item.Title, new { @required = "", @title = "Название" })

        @Html.TextAreaFor(m => m.Item.Desc, new { @title = "Положение о специалисте", @type = "editor", @rows = "8", data_dir = ViewBag.DataPath })

        @if (Model.EmployeeList != null && Model.EmployeeList != null)
        {
            <div class="group-block open topIndent-20" title="Главные специалисты:">
                <div class="row">
                    <div class="col-lg-12 sort_list">
                        <table id="member-spec-tbl" class="table table-striped table-hover">
                            @if (Model.Item.Specialists != null && Model.Item.Specialists.Count() > 0)
                            {
                                foreach (var spec in Model.Item.Specialists)
                                {
                                    <tr id="spec_@spec.Id" class="member-item">
                                        <td>
                                            @if (spec.People != null)
                                            {
                                                @spec.People.FIO
                                            }
                                        </td>
                                        <td>
                                            <a class="gs-member-delete icon-delete" data-member-id="@spec.Id"></a>
                                        </td>
                                    </tr>
                                }
                            }
                        </table>
                    </div>
                    <div class="col-lg-offset-9 col-lg-3">
                        @Html.ActionLink("Добавить", "NewGSMember", "MainSpecialist", new { @objId = Model.Item.Id, @objType = GSMemberType.SPEC }, new { @id = "AddSpec", @class = "button pop-up_frame icon-create", @title = "Добавить врача в ГС" })
                    </div>
                </div>
            </div>
            <div class="group-block open topIndent-20" title="Экспертный совет:">
                <div class="row">
                    <div class="col-lg-12 sort_list">
                        <table id="model-expert-tbl" class="table table-striped table-hover">
                            @if (Model.Item.Experts != null && Model.Item.Experts.Count() > 0)
                            {
                                foreach (var expert in Model.Item.Experts)
                                {
                                    <tr id="expert_@expert.Id" class="member-item">
                                        <td>
                                            @if (expert.People != null)
                                            {
                                                @expert.People.FIO
                                            }
                                        </td>
                                        <td>
                                            <a class="gs-member-delete icon-delete" data-member-id="@expert.Id"></a>
                                        </td>
                                    </tr>
                                }
                            }
                        </table>
                    </div>
                    <div class="col-lg-offset-9 col-lg-3">
                        @Html.ActionLink("Добавить", "NewGSMember", "MainSpecialist", new { @objId = Model.Item.Id, @objType = GSMemberType.EXPERT }, new { @id = "AddExpert", @class = "button pop-up_frame icon-create", @title = "Добавить врача в экспертый совет ГС" })
                    </div>
                </div>
            </div>
            @*<div class="form-group">
                    <label for="itemGroups-select">Главные специалисты:</label>
                    <select name="Item.EmployeeMainSpecs" id="itemGroups-select" class="form-control select2" multiple required>
                        @foreach (var emp in Model.EmployeeList)
                        {
                            <option value="@emp.Id" @(Model.Item != null && Model.Item.EmployeeMainSpecs != null && Model.Item.EmployeeMainSpecs.Any(s => s == emp.Id) ? "selected" : null)>@emp.Fullname</option>
                        }
                    </select>
                </div>*@

            @*<div class="child-list">
                    <div class="row">
                        <div class="col-sm-5">
                            <h3 class="nesting_title">Главные специалисты</h3>
                        </div>
                        <div class="col-sm-7">
                            @if (Model.SectionResolution.Write)
                            {
                                <a class="button icon-create green pull-right" href="/admin/orgs/administrativ/@Guid.NewGuid()?orgid=@Model.Item.Id">Добавить</a>
                            }
                            @if (Model.SectionResolution.Change)
                            {
                                <a class="button icon-sort pull-right sorting_element_on" style="max-width:150px;" data-action="noPreloader-accept" title="Добавляет возможность сортировки элементов списка">Сортировать</a>
                            }
                        </div>
                    </div>

                    @if (Model.Item.Administrativ != null)
                    {
                        <div class="sort_list">
                            <table class="table table-striped">
                                <thead>
                                    <tr>
                                        <th>&nbsp;</th>
                                        <th>ФИО</th>
                                    </tr>
                                </thead>
                                <tbody data-service="/Admin/Services/ChangePermit?group=orgs_administrativ&menuSort=@Model.Item.Id">
                                    @foreach (var item in Model.Item.Administrativ)
                            {
                                        <tr class="ui-sortable-handle" data-id="@item.id">
                                            <td></td>
                                            <td><a href="/admin/orgs/administrativ/@item.id">@item.Surname @item.Name @item.Patronymic</a></td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }

                </div>*@
        }

    </div>

    <div class="dop_info-block">
        <div class="dop-caption">Настройки</div>

        <div class="form-group">
            <label for="itemGroups-select">Специализация:</label>
            <select name="Item.Specialisations" id="itemGroups-select" class="form-control select2" multiple required>
                @if (Model.Spesializations != null && Model.Spesializations.Count() > 0)
                {
                    foreach (var post in Model.Spesializations)
                    {
                        <option value="@post.Id" @(Model.Item != null && Model.Item.Specialisations != null && Model.Item.Specialisations.Any(s => s == post.Id) ? "selected" : null)>@post.Name</option>
                    }
                }
            </select>
        </div>

        @if (Model.Item != null)
        {
            if (Model.Item.SiteId != Guid.Empty)
            {
                <br />
                <div class="alert alert-info">
                    <span>Сайт гл. специалиста уже создан!</span><br>
                    <a class="button icon-pencil" href="/admin/sites/item/@Model.Item.SiteId">Редактировать сайт</a>
                </div>
            }
            else
            {
                <a class="button icon-create" href="/Admin/Sites/Master/@Guid.NewGuid()/?type=spec&contentid=@Model.Item.Id">Создать сайт</a>
            }
        }

        @*@if (Model.EmployeeList != null && Model.EmployeeList.Count() > 0)
            {
                <div class="form-group">
                    <label for="itemGroups-select">Экспертный совет:</label>
                    <select name="Item.EmployeeExpSoviet" id="itemGroups-select" class="form-control select2" multiple required>
                        @if (Model.AllDoctors != null && Model.AllDoctors.Count() > 0)
                        {
                            foreach (var emp in Model.AllDoctors)
                            {
                                <option value="@emp.Id" @(Model.Item != null && Model.Item.EmployeeExpSoviet != null && Model.Item.EmployeeExpSoviet.Any(s => s == emp.Id) ? "selected" : null)>@emp.Fullname</option>
                            }
                        }
                    </select>
                </div>
            }*@

    </div>
}
else
{
    <div class="content"><p>У вас недостаточно прав.</p></div>
}

<div class="buttons">
    @if ((Model.Item != null && Model.UserResolution.Change) || (Model.Item == null && Model.UserResolution.Write))
    {
        <button type="submit" name="action" value="save-btn" data-primary="true" class="button icon-create">Сохранить</button>
    }
    @if (Model.Item != null && Model.UserResolution.Delete)
    {
        <button type="submit" name="action" data-action="delete" value="delete-btn" class="button icon-delete">Удалить</button>
    }
    <button type="submit" name="action" data-action="cancel" value="cancel-btn" class="button icon-cancel">Закрыть</button>
</div>